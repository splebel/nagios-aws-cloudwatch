#!/usr/bin/env ruby
require 'rubygems'
require 'getopt/std'
require 'AWS'

$timeperiod = 300
warning = 85
critical = 90
access_key_id = ''
secret_access_key = ''
ec2instance = ''

opt = Getopt::Std.getopts("c:w:k:s:H:")

if opt["c"]
  critical = opt["c"].to_i
end

if opt["w"]
  warning = opt["w"].to_i
end

if opt["k"]
  access_key_id = opt["k"]
end

if opt["s"]
  secret_access_key = opt["s"]
end

if opt["H"]
  ec2instance = opt["H"]
end  

begin
  $cw = AWS::Cloudwatch::Base.new(:access_key_id => access_key_id, :secret_access_key => secret_access_key)
rescue Exception => e
  puts 'Unknown! - Exception:', e.inspect
  exit 3
end


def get_stats(instance)
  res = $cw.get_metric_statistics(:namespace => "AWS/EC2", :measure_name => "CPUUtilization", :statistics => "Average", :dimensions => "InstanceId=#{instance}", :period => $timeperiod, :start_time => (Time.now() - $timeperiod) )
  begin
    ret = res['GetMetricStatisticsResult']['Datapoints']['member'].first['Average'].to_f.round(1)
  rescue
    ret = 0
  end
  return ret
end

cpu_usage = get_stats(ec2instance)

status = 'Unknown'
exitcode = 3

if cpu_usage < warning
  status = 'OK'
  exitcode = 0
end
if cpu_usage >= warning
  status = 'Warning'
  exitcode = 1
end
if cpu_usage >= critical
  status = 'Critical'
  exitcode = 2
end

puts "#{status} - #{cpu_usage}% cpu usage | 'cpu_usage'=#{cpu_usage}%"
exit exitcode

